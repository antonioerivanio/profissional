---
include:
  - project: 'pipelines/ci-templates'
    ref: 0.6.4
    file:
      - '/workflows/rules.yml'
      - '/variables/main.yml'
      - '/variables/kaniko/main.yml'
      - '/variables/helm/main.yml'
      - '/stages/main.yml'
      - '/default.yml'
      - '/jobs/main.yml'
      - '/jobs/kaniko/build.yml'
      - '/jobs/helm/lint.yml'
      - '/jobs/helm/package.yml'
      - '/jobs/helm/push.yml'
      - '/jobs/helm/deploy.yml'
      - '/jobs/crane/retag.yml'
      - '/jobs/java/maven.yml'
      - '/variables/java/maven.yml'


chart_lint:
  extends: .chart_lint
  stage: test
  needs: []


# Variáveis MAVEN_TEST_SKIP e MAVEN_SPRING_PROFILE_ACTIVE em "Settings > CI/CD > Variables"
project_build_and_test:
  extends: .project_build_and_test
  stage: build
  variables:
    # Necessário para atribuição do valor definido nas variáveis do projeto
    MAVEN_SPRING_PROFILE_ACTIVE: ${MAVEN_SPRING_PROFILE_ACTIVE}
  before_script:
    - if [[ $CI_ENVIRONMENT_NAME == 'development' ]]; then mv -f ./config/dev/* ./src/main/webapp/WEB-INF/ fi
    - if [[ $CI_ENVIRONMENT_NAME == 'staging' ]]; then mv -f ./config/staging/* ./src/main/webapp/WEB-INF/ fi
    - if [[ $CI_ENVIRONMENT_NAME == 'production' ]]; then mv -f ./config/production/* ./src/main/webapp/WEB-INF/ fi
    # Seleção do perfil apropriado antes do build
    - grep -lriF "application.properties" src/ | xargs sed -i "s|application.properties|application-${MAVEN_SPRING_PROFILE_ACTIVE}.properties|"
    - sed -i "s|<base-name>application</base-name>|<base-name>application-${MAVEN_SPRING_PROFILE_ACTIVE}</base-name>|" $(find ./src -name "faces-config.xml")
  needs: []
  rules: &multi_builds
    - if: '($CI_COMMIT_BRANCH =~ /(development|staging|^.*-hotfix$)/ || $CI_COMMIT_TAG)'


image_check:
  extends: .image_check
  stage: test
  needs: []
  rules: *multi_builds


chart_build:
  extends: .chart_build
  stage: package
  needs:
    - job: chart_lint


image_build:
  extends: .image_build
  stage: package
  script:
    - |
      echo "Building and shipping image to ${CI_REPOSITORY}:${CI_REGISTRY_PUSH_PORT}/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
      /kaniko/executor \
        --build-arg SSL_CERT="${SSL_CERT}" \
        --build-arg SSL_KEY="${SSL_KEY}" \
        --build-arg SSL_KEY_STORE_PASSWORD="${SSL_KEY_STORE_PASSWORD}" \
        --build-arg SSL_KEY_STORE_DEFAULT_PATH="${SSL_KEY_STORE_DEFAULT_PATH}" \
        --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/.Dockerfile-ci \
        $KANIKO_CACHE_ARGS $FORMATTEDTAGLIST $IMAGE_LABELS
  needs:
    - job: project_build_and_test
    - job: image_check
  allow_failure: true
  rules: *multi_builds


chart_release:
  extends: .chart_release
  stage: release
  needs:
    - job: chart_build


retag_to_staging:
  extends: .retag_to_staging
  stage: retag


retag_hotfix:
  extends: .retag_hotfix
  stage: retag


retag_to_production:
  extends: .retag_to_production
  stage: retag


chart_deploy:
  extends: .chart_deploy
  stage: deploy
  environment:
    url: https://${K8S_APP_ING}
    on_stop: chart_uninstall


chart_uninstall:
  extends: .chart_uninstall
  stage: deploy
